# this is an example of the Uber API
# as a demonstration of an API spec in YAML
swagger: '2.0'
info:
  title: cse test
  version: 1.0.0
  x-java-interface: com.huawei.demo4mt.server.Test
  
# the domain of the service
#host: api.uber.com

# array of all schemes that your API supports
#schemes:
#  - https

# will be prefixed to all paths
basePath: /pojo/rest
produces:
  - application/json
  
paths:
  /dbgrinfo:
    post:
      operationId: dbGrInfoConfig
      produces:
        - text/plain
      parameters:
        - in: body
          name: publicdata
          required: true
          x-raw-json: true
          schema:
            type: "string"
      responses:
        202:
          description: asdf
          schema: 
            type: string
  /testStringArray:
    get:
      operationId: testStringArray
      parameters:
        - name: arr
          in: query
          required: true
          type: array
          items:
            type: string
      responses:
        200:
          description: asdf
          schema: 
            type: string
  /testStatic:
    get:
      operationId: getTestString
      parameters:
        - name: code
          in: query
          required: true
          type: string
      responses:
        200:
          description: asdf
          schema: 
            type: string
    post:
      operationId: postTestStatic
      parameters:
        - name: code
          in: query
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: asdf
          schema: 
            type: string
    patch:
      operationId: patchTestStatic
      parameters:
        - name: code
          in: query
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: asdf
          schema:
            type: string
  /testException/{code}:
    get:
      operationId: testException
      parameters:
        - name: code
          in: path
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: asdf
          schema: 
            type: string
        456:
          description: asdf
          schema: 
            type: string
        556:
          description: asdf
          schema: 
            type: array
            items:
              type: string
        557:
          description: asdf
          schema: 
            type: array
            items:
              type: array
              items:
                type: string
  /splitParam:
    post:
      operationId: splitParam
      parameters:
        - name: index
          in: query
          required: true
          type: number
        - name: user
          in: body
          schema:
            $ref: '#/definitions/User'
      responses: 
        200:
          description: asdf
          schema: 
            $ref: '#/definitions/User'
        default:
          description: asf
          schema:
            $ref: '#/definitions/Error'
  /wrapParam:
    post:
      operationId: wrapParam
      parameters:
        - name: TestRequest
          in: body
          required: true
          schema: 
            $ref: '#/definitions/TestRequest'
      responses: 
        200:
          description: asdf
          schema: 
            $ref: '#/definitions/User'
        default:
          description: asf
          schema:
            $ref: '#/definitions/Error'
  /addstring:
    delete:
      operationId: addString
      parameters:
        - name: strArr
          in: query
          required: true
          type: array
          items:
            type: string
      responses:
        200:
          description: add string
          schema:
            type: string
  /testHttpHeader:
    get:
      operationId: "testHttpHeader"
      parameters:
      - in: "header"
        name: "code"
        required: true
        schema:
          $ref: "#/definitions/testHttpHeaderBody"
      responses:
        200:
          description: "response of 200"
          schema:
            type: string
        400:
          description: "parameter error"
          schema:
            type: string
        405:
          description: "forbiden"
          schema:
            type: string
            
definitions:
  Error:
    type: object
    x-java-class: org.apache.servicecomb.swagger.invocation.exception.CommonExceptionData
    properties:
      message:
        type: string
  TestRequest:
    type: object
    properties:
      index:
        type: number
      user:
        $ref: '#/definitions/User'
      users:
        type: array
        items:
          $ref: '#/definitions/User'
      data:
        type: string
        format: byte
  User:
    type: object
    properties:
      name:
        type: string
      age:
        type: number
      index:
        type: number
  testHttpHeaderBody:
    type: "object"
    properties:
      code:
        type: "string"